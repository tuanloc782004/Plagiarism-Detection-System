/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2025-05-26 10:22:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import controller.EssayListServlet.EssayWithUser;
import model.Essay;
import model.User;

public final class essay_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Plagiarism%20Detection%20System/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/plagiarism-checker/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153359882000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1308849601000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Essay");
    _jspx_imports_classes.add("controller.EssayListServlet.EssayWithUser");
    _jspx_imports_classes.add("model.User");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

Object currentUser = session.getAttribute("user");
if (currentUser == null) {
	response.sendRedirect("login.jsp");
	return;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"vi\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>EduCheck | Danh saÃÅch baÃÄi</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/styles.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".submissions-table {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table-header, .table-body {\r\n");
      out.write("	display: table;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	table-layout: fixed;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table-row {\r\n");
      out.write("	display: table-row;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table-cell {\r\n");
      out.write("	display: table-cell;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	word-wrap: break-word;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<nav class=\"navbar\">\r\n");
      out.write("		<div class=\"nav-container\">\r\n");
      out.write("			<div class=\"nav-logo\">\r\n");
      out.write("				<span class=\"logo-icon\">üéì</span> <span class=\"logo-text\">EduCheck</span>\r\n");
      out.write("			</div>\r\n");
      out.write("			<ul class=\"nav-menu\" id=\"nav-menu\">\r\n");
      out.write("				<li><a href=\"home.jsp\" class=\"nav-link\">üè† Trang ch·ªß</a></li>\r\n");
      out.write("				<li><a href=\"UploadEssayServlet\" class=\"nav-link\">üì• N·ªôp\r\n");
      out.write("						b√†i</a></li>\r\n");
      out.write("				<li><a href=\"EssayListServlet\" class=\"nav-link active\">üìÑ\r\n");
      out.write("						Danh s√°ch b√†i</a></li>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("			<div class=\"hamburger\" id=\"hamburger\">\r\n");
      out.write("				<span></span> <span></span> <span></span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<main class=\"main-content\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"page-header\">\r\n");
      out.write("				<h1 class=\"page-title\">üìÑ Danh s√°ch b√†i ƒë√£ n·ªôp</h1>\r\n");
      out.write("				<p class=\"page-subtitle\">Theo d√µi tr·∫°ng th√°i v√† k·∫øt qu·∫£ ki·ªÉm tra\r\n");
      out.write("					c·ªßa c√°c b√†i lu·∫≠n</p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"submissions-container\">\r\n");
      out.write("				<div class=\"submissions-header\">\r\n");
      out.write("					<div class=\"submissions-stats\">\r\n");
      out.write("						<div class=\"stat-card\">\r\n");
      out.write("							<span class=\"stat-icon\">üìù</span>\r\n");
      out.write("							<div class=\"stat-info\">\r\n");
      out.write("								<span class=\"stat-number\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <span\r\n");
      out.write("									class=\"stat-label\">T·ªïng b√†i n·ªôp</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"stat-card\">\r\n");
      out.write("							<span class=\"stat-icon\">‚è≥</span>\r\n");
      out.write("							<div class=\"stat-info\">\r\n");
      out.write("								<span class=\"stat-number\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${processingCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <span\r\n");
      out.write("									class=\"stat-label\">ƒêang x·ª≠ l√Ω</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"stat-card\">\r\n");
      out.write("							<span class=\"stat-icon\">‚úÖ</span>\r\n");
      out.write("							<div class=\"stat-info\">\r\n");
      out.write("								<span class=\"stat-number\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${completedCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <span\r\n");
      out.write("									class=\"stat-label\">ƒê√£ ho√†n th√†nh</span>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<a href=\"UploadEssayServlet\" class=\"btn btn-primary\">‚ûï N·ªôp b√†i\r\n");
      out.write("						m·ªõi</a>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"submissions-table\">\r\n");
      out.write("					<div class=\"table-header\">\r\n");
      out.write("						<div class=\"table-row\">\r\n");
      out.write("							<div class=\"table-cell\">üìÑ T√™n file</div>\r\n");
      out.write("							<div class=\"table-cell\">üë§ T√°c gi·∫£</div>\r\n");
      out.write("							<div class=\"table-cell\">üìÖ Ng√†y n·ªôp</div>\r\n");
      out.write("							<div class=\"table-cell\">‚ö° Tr·∫°ng th√°i</div>\r\n");
      out.write("							<div class=\"table-cell\">üìä ƒê·∫°o vƒÉn (%)</div>\r\n");
      out.write("							<div class=\"table-cell\">üîç Chi ti·∫øt</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"table-body\">\r\n");
      out.write("						");

						List<EssayWithUser> essayList = (List<EssayWithUser>) request.getAttribute("essayList");
						if (essayList != null && !essayList.isEmpty()) {
							for (EssayWithUser item : essayList) {
								Essay essay = item.getEssay();
								User user = item.getUser();
						
      out.write("\r\n");
      out.write("						<div class=\"table-row\">\r\n");
      out.write("							<div class=\"table-cell\">");
      out.print(essay.getFilename());
      out.write("</div>\r\n");
      out.write("							<div class=\"table-cell\">");
      out.print(user.getFullName() != null ? user.getFullName() : user.getUsername());
      out.write("</div>\r\n");
      out.write("							<div class=\"table-cell\">\r\n");
      out.write("								<span class=\"date\" data-date=\"");
      out.print(essay.getSubmittedAt());
      out.write("\"></span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"table-cell\">\r\n");
      out.write("								<span class=\"status\" data-status=\"");
      out.print(essay.getStatus());
      out.write("\"></span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"table-cell\">\r\n");
      out.write("								");

								double rate = essay.getPlagiarismPercent();
								String badgeClass;
								if (rate < 20) {
									badgeClass = "plagiarism-low";
								} else if (rate < 40) {
									badgeClass = "plagiarism-medium";
								} else {
									badgeClass = "plagiarism-high";
								}
								
      out.write("\r\n");
      out.write("								<span class=\"plagiarism-badge ");
      out.print(badgeClass);
      out.write('"');
      out.write('>');
      out.print(String.format("%.2f", rate));
      out.write("%</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"table-cell\">\r\n");
      out.write("								");

								String status = essay.getStatus();
								if ("PROCESSED".equalsIgnoreCase(status)) {
								
      out.write("\r\n");
      out.write("								<a href=\"PlagiarismDetailServlet?essayId=");
      out.print(essay.getId());
      out.write("\"\r\n");
      out.write("									class=\"btn btn-small btn-outline\"> üîç Xem chi ti·∫øt </a>\r\n");
      out.write("								");

								} else {
								
      out.write("\r\n");
      out.write("								<button class=\"btn btn-small btn-disabled\" disabled>‚è≥\r\n");
      out.write("									ƒêang x·ª≠ l√Ω</button>\r\n");
      out.write("								");

								}
								
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						");

						}
						} else {
						
      out.write("\r\n");
      out.write("						<div class=\"table-row\">\r\n");
      out.write("							<div class=\"table-cell\" colspan=\"7\">Ch∆∞a c√≥ b√†i lu·∫≠n n√†o.</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("\r\n");
      out.write("	<footer class=\"footer\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<p>&copy; 2024 EduCheck. Made with üíñ for students</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		function getStatusBadge(status) {\r\n");
      out.write("			switch(status) {\r\n");
      out.write("				case 'PROCESSED':\r\n");
      out.write("					return '<span class=\"status-badge status-completed\">‚úÖ ƒê√£ x·ª≠ l√Ω</span>';\r\n");
      out.write("				case 'PENDING':\r\n");
      out.write("					return '<span class=\"status-badge status-processing\">‚è≥ ƒêang x·ª≠ l√Ω</span>';\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function formatDate(dateString) {\r\n");
      out.write("			const date = new Date(dateString);\r\n");
      out.write("			return date.toLocaleDateString('vi-VN');\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("			document.querySelectorAll(\".status\").forEach(el => {\r\n");
      out.write("				const status = el.getAttribute(\"data-status\");\r\n");
      out.write("				el.innerHTML = getStatusBadge(status);\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			document.querySelectorAll(\".plagiarism\").forEach(el => {\r\n");
      out.write("				const rate = el.getAttribute(\"data-rate\");\r\n");
      out.write("				el.innerHTML = getPlagiarismBadge(rate);\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			document.querySelectorAll(\".date\").forEach(el => {\r\n");
      out.write("				const date = el.getAttribute(\"data-date\");\r\n");
      out.write("				el.innerText = formatDate(date);\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /essay_list.jsp(58,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<li><a href=\"LogoutServlet\" class=\"nav-link logout-btn\">üö™\r\n");
          out.write("								ƒêƒÉng xu·∫•t</a></li>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<li><a href=\"LoginServlet\" class=\"nav-link login-btn\">üîê\r\n");
          out.write("								ƒêƒÉng nh·∫≠p</a></li>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
